{"version":3,"sources":["webpack://WebIDL2/webpack/universalModuleDefinition","webpack://WebIDL2/webpack/bootstrap","webpack://WebIDL2/./lib/error.js","webpack://WebIDL2/./lib/productions/base.js","webpack://WebIDL2/./lib/validators/helpers.js","webpack://WebIDL2/./lib/productions/type.js","webpack://WebIDL2/./lib/productions/default.js","webpack://WebIDL2/./lib/productions/array-base.js","webpack://WebIDL2/./lib/productions/extended-attributes.js","webpack://WebIDL2/./lib/productions/helpers.js","webpack://WebIDL2/./lib/productions/argument.js","webpack://WebIDL2/./lib/productions/token.js","webpack://WebIDL2/./lib/productions/operation.js","webpack://WebIDL2/./lib/productions/attribute.js","webpack://WebIDL2/./lib/tokeniser.js","webpack://WebIDL2/./lib/productions/enum.js","webpack://WebIDL2/./lib/productions/includes.js","webpack://WebIDL2/./lib/productions/typedef.js","webpack://WebIDL2/./lib/productions/callback.js","webpack://WebIDL2/./lib/productions/container.js","webpack://WebIDL2/./lib/productions/constant.js","webpack://WebIDL2/./lib/productions/iterable.js","webpack://WebIDL2/./lib/productions/constructor.js","webpack://WebIDL2/./lib/productions/interface.js","webpack://WebIDL2/./lib/validators/interface.js","webpack://WebIDL2/./lib/productions/mixin.js","webpack://WebIDL2/./lib/productions/field.js","webpack://WebIDL2/./lib/productions/dictionary.js","webpack://WebIDL2/./lib/productions/namespace.js","webpack://WebIDL2/./lib/productions/callback-interface.js","webpack://WebIDL2/./lib/webidl2.js","webpack://WebIDL2/./lib/writer.js","webpack://WebIDL2/./lib/validator.js","webpack://WebIDL2/./index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","source","position","current","message","kind","level","autofix","ruleName","sliceTokens","count","slice","Math","max","tokensToText","inputs","precedes","text","map","trivia","join","nextToken","type","length","line","precedingLastLine","splitted","split","lastLine","subsequentTokens","subsequentText","sourceContext","repeat","contextType","context","partial","bareMessage","sourceName","input","tokens","syntaxError","validationError","token","options","index","Base","defineProperties","json","undefined","inheritance","proto","descMap","getOwnPropertyDescriptors","entries","getPrototypeOf","idlTypeIncludesDictionary","idlType","defs","useNullableInner","union","def","unique","typedefIncludesDictionary","cache","has","set","result","nullable","subtype","type_suffix","tokeniser","obj","consume","probe","error","single_type","typeName","ret","base","open","return_type","push","type_with_extended_attributes","keyType","stringTypes","keyIdlType","separator","valueType","close","generic_type","primitive_type","typeNameKeywords","generic","typ","or","union_type","super","extAttrs","Boolean","prefix","postfix","filter","typedef","target","reference","targetToken","validate","assign","const_value","expression","const_data","negative","ArrayBase","Array","secondaryName","list","rhsType","ids","parser","listName","identifiers","argument_list","hasRhs","params","parse","arg","arguments","extAttr","start_position","optional","variadic","argumentNameKeywords","default","unconsume","special","regular","termination","includes","argument","noInherit","readonly","identifier","startsWith","allowDangler","first","items","item","num_type","integer_type","decimal_type","voidToken","stringifier","getLastIndentation","str","lines","match","autofixAddExposedWindow","exposed","existing","test","unshift","tokenRe","nonRegexTerminals","concat","punctuations","reserved","idl","lastCharIndex","nextChar","charAt","attemptTokenMatch","noFlushTrivia","currentTrivia","pop","lastIndex","WebIDLParseError","punctuation","Error","re","exec","tokenise","candidates","values","mixin","instance","inheritable","allowedMembers","colon","members","ea","mem","args","member","unescape","async","secondTypeRequired","secondTypeAllowed","static_member","every","constructors","constructor","autofixConstructor","opNames","Set","getOperations","op","partials","mixins","mixinMap","ext","additions","forEachExtension","addition","add","existings","checkInterfaceMemberDuplication","interfaceDef","constructorExtAttr","indentation","memberIndent","getFirstToken","data","sort","x","y","parentTrivia","indentCh","getMemberIndentation","constructorOp","existingIndex","array","predicate","reverse","findIndex","findLastIndex","splice","indexOf","removed","trim","required","callback","parseByTokens","interface_","opts","definition","res","eof","concrete","definitions","noop","templates","wrap","nameless","extendedAttribute","extendedAttributeReference","write","ast","ts","raw","unescaped","wrapper","reference_token","name_token","type_body","it","firstToken","ref","extended_attributes","default_","make_ext_at","id","eats","container","inh","iterate","iterable_like","parent","table","interface","namespace","operation","body","attribute","dictionary","field","const","enum","v","iterable","maplike","setlike","things","results","thing","dispatch","getMixinMap","all","Map","include","validateIterable","duplicates","WeakMap","groupDefinitions","dup","checkDuplicatedNames","flat"],"mappings":"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","file":"webidl2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebIDL2\"] = factory();\n\telse\n\t\troot[\"WebIDL2\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @param {string} text\n */\nfunction lastLine(text) {\n  const splitted = text.split(\"\\n\");\n  return splitted[splitted.length - 1];\n}\n\n/**\n * @typedef {object} WebIDL2ErrorOptions\n * @property {\"error\" | \"warning\"} level\n * @property {Function} autofix\n *\n * @param {string} message error message\n * @param {\"Syntax\" | \"Validation\"} kind error type\n * @param {WebIDL2ErrorOptions} [options]\n */\nfunction error(source, position, current, message, kind, { level = \"error\", autofix, ruleName } = {}) {\n  /**\n   * @param {number} count\n   */\n  function sliceTokens(count) {\n    return count > 0 ?\n      source.slice(position, position + count) :\n      source.slice(Math.max(position + count, 0), position);\n  }\n\n  function tokensToText(inputs, { precedes } = {}) {\n    const text = inputs.map(t => t.trivia + t.value).join(\"\");\n    const nextToken = source[position];\n    if (nextToken.type === \"eof\") {\n      return text;\n    }\n    if (precedes) {\n      return text + nextToken.trivia;\n    }\n    return text.slice(nextToken.trivia.length);\n  }\n\n  const maxTokens = 5; // arbitrary but works well enough\n  const line =\n    source[position].type !== \"eof\" ? source[position].line :\n    source.length > 1 ? source[position - 1].line :\n    1;\n\n  const precedingLastLine = lastLine(\n    tokensToText(sliceTokens(-maxTokens), { precedes: true })\n  );\n\n  const subsequentTokens = sliceTokens(maxTokens);\n  const subsequentText = tokensToText(subsequentTokens);\n  const subsequentFirstLine = subsequentText.split(\"\\n\")[0];\n\n  const spaced = \" \".repeat(precedingLastLine.length) + \"^\";\n  const sourceContext = precedingLastLine + subsequentFirstLine + \"\\n\" + spaced;\n\n  const contextType = kind === \"Syntax\" ? \"since\" : \"inside\";\n  const inSourceName = source.name ? ` in ${source.name}` : \"\";\n  const grammaticalContext = (current && current.name) ? `, ${contextType} \\`${current.partial ? \"partial \" : \"\"}${current.type} ${current.name}\\`` : \"\";\n  const context = `${kind} error at line ${line}${inSourceName}${grammaticalContext}:\\n${sourceContext}`;\n  return {\n    message: `${context} ${message}`,\n    bareMessage: message,\n    context,\n    line,\n    sourceName: source.name,\n    level,\n    ruleName,\n    autofix,\n    input: subsequentText,\n    tokens: subsequentTokens\n  };\n}\n\n/**\n * @param {string} message error message\n */\nexport function syntaxError(source, position, current, message) {\n  return error(source, position, current, message, \"Syntax\");\n}\n\n/**\n * @param {string} message error message\n * @param {WebIDL2ErrorOptions} [options]\n */\nexport function validationError(token, current, ruleName, message, options = {}) {\n  options.ruleName = ruleName;\n  return error(current.source, token.index, current, message, \"Validation\", options);\n}\n","export class Base {\n  constructor({ source, tokens }) {\n    Object.defineProperties(this, {\n      source: { value: source },\n      tokens: { value: tokens }\n    });\n  }\n\n  toJSON() {\n    const json = { type: undefined, name: undefined, inheritance: undefined };\n    let proto = this;\n    while (proto !== Object.prototype) {\n      const descMap = Object.getOwnPropertyDescriptors(proto);\n      for (const [key, value] of Object.entries(descMap)) {\n        if (value.enumerable || value.get) {\n          json[key] = this[key];\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    return json;\n  }\n}\n","/**\n * @param {*} idlType\n * @param {*[]} defs\n * @param {object} [options]\n * @param {boolean} [options.useNullableInner] use when the input idlType is nullable and you want to use its inner type\n * @return the type reference that ultimately includes dictionary.\n */\nexport function idlTypeIncludesDictionary(idlType, defs, { useNullableInner } = {}) {\n  if (!idlType.union) {\n    const def = defs.unique.get(idlType.idlType);\n    if (!def) {\n      return;\n    }\n    if (def.type === \"typedef\") {\n      const { typedefIncludesDictionary} = defs.cache;\n      if (typedefIncludesDictionary.has(def)) {\n        // Note that this also halts when it met indeterminate state\n        // to prevent infinite recursion\n        return typedefIncludesDictionary.get(def);\n      }\n      defs.cache.typedefIncludesDictionary.set(def, undefined); // indeterminate state\n      const result = idlTypeIncludesDictionary(def.idlType, defs);\n      defs.cache.typedefIncludesDictionary.set(def, result);\n      if (result) {\n        return idlType;\n      }\n    }\n    if (def.type === \"dictionary\" && (useNullableInner || !idlType.nullable)) {\n      return idlType;\n    }\n  }\n  for (const subtype of idlType.subtype) {\n    const result = idlTypeIncludesDictionary(subtype, defs);\n    if (result) {\n      if (subtype.union) {\n        return result;\n      }\n      return subtype;\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape, type_with_extended_attributes, return_type, primitive_type } from \"./helpers.js\";\nimport { stringTypes, typeNameKeywords } from \"../tokeniser.js\";\nimport { validationError } from \"../error.js\";\nimport { idlTypeIncludesDictionary } from \"../validators/helpers.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nfunction generic_type(tokeniser, typeName) {\n  const base = tokeniser.consume(\"FrozenArray\", \"Promise\", \"sequence\", \"record\");\n  if (!base) {\n    return;\n  }\n  const ret = new Type({ source: tokeniser.source, tokens: { base } });\n  ret.tokens.open = tokeniser.consume(\"<\") || tokeniser.error(`No opening bracket after ${base.type}`);\n  switch (base.type) {\n    case \"Promise\": {\n      if (tokeniser.probe(\"[\")) tokeniser.error(\"Promise type cannot have extended attribute\");\n      const subtype = return_type(tokeniser, typeName) || tokeniser.error(\"Missing Promise subtype\");\n      ret.subtype.push(subtype);\n      break;\n    }\n    case \"sequence\":\n    case \"FrozenArray\": {\n      const subtype = type_with_extended_attributes(tokeniser, typeName) || tokeniser.error(`Missing ${base.type} subtype`);\n      ret.subtype.push(subtype);\n      break;\n    }\n    case \"record\": {\n      if (tokeniser.probe(\"[\")) tokeniser.error(\"Record key cannot have extended attribute\");\n      const keyType = tokeniser.consume(...stringTypes) || tokeniser.error(`Record key must be one of: ${stringTypes.join(\", \")}`);\n      const keyIdlType = new Type({ source: tokeniser.source, tokens: { base: keyType }});\n      keyIdlType.tokens.separator = tokeniser.consume(\",\") || tokeniser.error(\"Missing comma after record key type\");\n      keyIdlType.type = typeName;\n      const valueType = type_with_extended_attributes(tokeniser, typeName) || tokeniser.error(\"Error parsing generic type record\");\n      ret.subtype.push(keyIdlType, valueType);\n      break;\n    }\n  }\n  if (!ret.idlType) tokeniser.error(`Error parsing generic type ${base.type}`);\n  ret.tokens.close = tokeniser.consume(\">\") || tokeniser.error(`Missing closing bracket after ${base.type}`);\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction type_suffix(tokeniser, obj) {\n  const nullable = tokeniser.consume(\"?\");\n  if (nullable) {\n    obj.tokens.nullable = nullable;\n  }\n  if (tokeniser.probe(\"?\")) tokeniser.error(\"Can't nullable more than once\");\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nfunction single_type(tokeniser, typeName) {\n  let ret = generic_type(tokeniser, typeName) || primitive_type(tokeniser);\n  if (!ret) {\n    const base = tokeniser.consume(\"identifier\", ...stringTypes, ...typeNameKeywords);\n    if (!base) {\n      return;\n    }\n    ret = new Type({ source: tokeniser.source, tokens: { base } });\n    if (tokeniser.probe(\"<\")) tokeniser.error(`Unsupported generic type ${base.value}`);\n  }\n  if (ret.generic === \"Promise\" && tokeniser.probe(\"?\")) {\n    tokeniser.error(\"Promise type cannot be nullable\");\n  }\n  ret.type = typeName || null;\n  type_suffix(tokeniser, ret);\n  if (ret.nullable && ret.idlType === \"any\") tokeniser.error(\"Type `any` cannot be made nullable\");\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} type\n */\nfunction union_type(tokeniser, type) {\n  const tokens = {};\n  tokens.open = tokeniser.consume(\"(\");\n  if (!tokens.open) return;\n  const ret = new Type({ source: tokeniser.source, tokens });\n  ret.type = type || null;\n  while (true) {\n    const typ = type_with_extended_attributes(tokeniser) || tokeniser.error(\"No type after open parenthesis or 'or' in union type\");\n    if (typ.idlType === \"any\") tokeniser.error(\"Type `any` cannot be included in a union type\");\n    if (typ.generic === \"Promise\") tokeniser.error(\"Type `Promise` cannot be included in a union type\");\n    ret.subtype.push(typ);\n    const or = tokeniser.consume(\"or\");\n    if (or) {\n      typ.tokens.separator = or;\n    }\n    else break;\n  }\n  if (ret.idlType.length < 2) {\n    tokeniser.error(\"At least two types are expected in a union type but found less\");\n  }\n  tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated union type\");\n  type_suffix(tokeniser, ret);\n  return ret;\n}\n\nexport class Type extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {string} typeName\n   */\n  static parse(tokeniser, typeName) {\n    return single_type(tokeniser, typeName) || union_type(tokeniser, typeName);\n  }\n\n  constructor({ source, tokens }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"subtype\", { value: [] });\n    this.extAttrs = [];\n  }\n\n  get generic() {\n    if (this.subtype.length && this.tokens.base) {\n      return this.tokens.base.value;\n    }\n    return \"\";\n  }\n  get nullable() {\n    return Boolean(this.tokens.nullable);\n  }\n  get union() {\n    return Boolean(this.subtype.length) && !this.tokens.base;\n  }\n  get idlType() {\n    if (this.subtype.length) {\n      return this.subtype;\n    }\n    // Adding prefixes/postfixes for \"unrestricted float\", etc.\n    const name = [\n      this.tokens.prefix,\n      this.tokens.base,\n      this.tokens.postfix\n    ].filter(t => t).map(t => t.value).join(\" \");\n    return unescape(name);\n  }\n\n  *validate(defs) {\n    /*\n     * If a union is nullable, its subunions cannot include a dictionary\n     * If not, subunions may include dictionaries if each union is not nullable\n     */\n    const typedef = !this.union && defs.unique.get(this.idlType);\n    const target =\n      this.union ? this :\n      (typedef && typedef.type === \"typedef\") ? typedef.idlType :\n      undefined;\n    if (target && this.nullable) {\n      // do not allow any dictionary\n      const reference = idlTypeIncludesDictionary(target, defs);\n      if (reference) {\n        const targetToken = (this.union ? reference : this).tokens.base;\n        const message = `Nullable union cannot include a dictionary type`;\n        yield validationError(targetToken, this, \"no-nullable-union-dict\", message);\n      }\n    } else {\n      // allow some dictionary\n      for (const subtype of this.subtype) {\n        yield* subtype.validate(defs);\n      }\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { const_data, const_value } from \"./helpers.js\";\n\nexport class Default extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const assign = tokeniser.consume(\"=\");\n    if (!assign) {\n      return null;\n    }\n    const def = const_value(tokeniser) || tokeniser.consume(\"string\", \"null\", \"[\", \"{\") || tokeniser.error(\"No value for default\");\n    const expression = [def];\n    if (def.type === \"[\") {\n      const close = tokeniser.consume(\"]\") || tokeniser.error(\"Default sequence value must be empty\");\n      expression.push(close);\n    } else if (def.type === \"{\") {\n      const close = tokeniser.consume(\"}\") || tokeniser.error(\"Default dictionary value must be empty\");\n      expression.push(close);\n    }\n    return new Default({ source: tokeniser.source, tokens: { assign }, expression });\n  }\n\n  constructor({ source, tokens, expression }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"expression\", { value: expression });\n  }\n\n  get type() {\n    return const_data(this.expression[0]).type;\n  }\n  get value() {\n    return const_data(this.expression[0]).value;\n  }\n  get negative() {\n    return const_data(this.expression[0]).negative;\n  }\n}\n","export class ArrayBase extends Array {\n  constructor({ source, tokens }) {\n    super();\n    Object.defineProperties(this, {\n      source: { value: source },\n      tokens: { value: tokens }\n    });\n  }\n}\n","import { Base } from \"./base.js\";\nimport { ArrayBase } from \"./array-base.js\";\nimport { list, identifiers, argument_list } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\n\nclass ExtendedAttributeParameters extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = { assign: tokeniser.consume(\"=\") };\n    const ret = new ExtendedAttributeParameters({ source: tokeniser.source, tokens });\n    if (tokens.assign) {\n      tokens.secondaryName = tokeniser.consume(\"identifier\", \"decimal\", \"integer\", \"string\");\n    }\n    tokens.open = tokeniser.consume(\"(\");\n    if (tokens.open) {\n      ret.list = ret.rhsType === \"identifier-list\" ?\n        // [Exposed=(Window,Worker)]\n        identifiers(tokeniser) :\n        // [NamedConstructor=Audio(DOMString src)] or [Constructor(DOMString str)]\n        argument_list(tokeniser);\n      tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unexpected token in extended attribute argument list\");\n    } else if (ret.hasRhs && !tokens.secondaryName) {\n      tokeniser.error(\"No right hand side to extended attribute assignment\");\n    }\n    return ret;\n  }\n\n  get rhsType() {\n    return !this.tokens.assign ? null :\n      !this.tokens.secondaryName ? \"identifier-list\" :\n        this.tokens.secondaryName.type;\n  }\n}\n\nexport class SimpleExtendedAttribute extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const name = tokeniser.consume(\"identifier\");\n    if (name) {\n      return new SimpleExtendedAttribute({\n        source: tokeniser.source,\n        tokens: { name },\n        params: ExtendedAttributeParameters.parse(tokeniser)\n      });\n    }\n  }\n\n  constructor({ source, tokens, params }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"params\", { value: params });\n  }\n\n  get type() {\n    return \"extended-attribute\";\n  }\n  get name() {\n    return this.tokens.name.value;\n  }\n  get rhs() {\n    const { rhsType: type, tokens, list } = this.params;\n    if (!type) {\n      return null;\n    }\n    const value = type === \"identifier-list\" ? list : tokens.secondaryName.value;\n    return { type, value };\n  }\n  get arguments() {\n    const { rhsType, list } = this.params;\n    if (!list || rhsType === \"identifier-list\") {\n      return [];\n    }\n    return list;\n  }\n\n  *validate(defs) {\n    if (this.name === \"NoInterfaceObject\") {\n      const message = `\\`[NoInterfaceObject]\\` extended attribute is an \\\nundesirable feature that may be removed from Web IDL in the future. Refer to the \\\n[relevant upstream PR](https://github.com/heycam/webidl/pull/609) for more \\\ninformation.`;\n      yield validationError(this.tokens.name, this, \"no-nointerfaceobject\", message, { level: \"warning\" });\n    }\n    for (const arg of this.arguments) {\n      yield* arg.validate(defs);\n    }\n  }\n}\n\n// Note: we parse something simpler than the official syntax. It's all that ever\n// seems to be used\nexport class ExtendedAttributes extends ArrayBase {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.open = tokeniser.consume(\"[\");\n    if (!tokens.open) return new ExtendedAttributes({});\n    const ret = new ExtendedAttributes({ source: tokeniser.source, tokens });\n    ret.push(...list(tokeniser, {\n      parser: SimpleExtendedAttribute.parse,\n      listName: \"extended attribute\"\n    }));\n    tokens.close = tokeniser.consume(\"]\") || tokeniser.error(\"Unexpected closing token of extended attribute\");\n    if (!ret.length) {\n      tokeniser.error(\"Found an empty extended attribute\");\n    }\n    if (tokeniser.probe(\"[\")) {\n      tokeniser.error(\"Illegal double extended attribute lists, consider merging them\");\n    }\n    return ret;\n  }\n\n  *validate(defs) {\n    for (const extAttr of this) {\n      yield* extAttr.validate(defs);\n    }\n  }\n}\n","import { Type } from \"./type.js\";\nimport { Argument } from \"./argument.js\";\nimport { Token } from \"./token.js\";\nimport { ExtendedAttributes, SimpleExtendedAttribute } from \"./extended-attributes.js\";\nimport { Operation } from \"./operation.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Tokeniser } from \"../tokeniser.js\";\n\n/**\n * @param {string} identifier\n */\nexport function unescape(identifier) {\n  return identifier.startsWith('_') ? identifier.slice(1) : identifier;\n}\n\n/**\n * Parses comma-separated list\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {object} args\n * @param {Function} args.parser parser function for each item\n * @param {boolean} [args.allowDangler] whether to allow dangling comma\n * @param {string} [args.listName] the name to be shown on error messages\n */\nexport function list(tokeniser, { parser, allowDangler, listName = \"list\" }) {\n  const first = parser(tokeniser);\n  if (!first) {\n    return [];\n  }\n  first.tokens.separator = tokeniser.consume(\",\");\n  const items = [first];\n  while (first.tokens.separator) {\n    const item = parser(tokeniser);\n    if (!item) {\n      if (!allowDangler) {\n        tokeniser.error(`Trailing comma in ${listName}`);\n      }\n      break;\n    }\n    item.tokens.separator = tokeniser.consume(\",\");\n    items.push(item);\n    if (!item.tokens.separator) break;\n  }\n  return items;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function const_value(tokeniser) {\n  return tokeniser.consume(\"true\", \"false\", \"Infinity\", \"-Infinity\", \"NaN\", \"decimal\", \"integer\");\n}\n\n/**\n * @param {object} token\n * @param {string} token.type\n * @param {string} token.value\n */\nexport function const_data({ type, value }) {\n  switch (type) {\n    case \"true\":\n    case \"false\":\n      return { type: \"boolean\", value: type === \"true\" };\n    case \"Infinity\":\n    case \"-Infinity\":\n      return { type: \"Infinity\", negative: type.startsWith(\"-\") };\n    case \"[\":\n      return { type: \"sequence\", value: [] };\n    case \"{\":\n      return { type: \"dictionary\" };\n    case \"decimal\":\n    case \"integer\":\n      return { type: \"number\", value };\n    case \"string\":\n      return { type: \"string\", value: value.slice(1, -1) };\n    default:\n      return { type };\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function primitive_type(tokeniser) {\n  function integer_type() {\n    const prefix = tokeniser.consume(\"unsigned\");\n    const base = tokeniser.consume(\"short\", \"long\");\n    if (base) {\n      const postfix = tokeniser.consume(\"long\");\n      return new Type({ source, tokens: { prefix, base, postfix } });\n    }\n    if (prefix) tokeniser.error(\"Failed to parse integer type\");\n  }\n\n  function decimal_type() {\n    const prefix = tokeniser.consume(\"unrestricted\");\n    const base = tokeniser.consume(\"float\", \"double\");\n    if (base) {\n      return new Type({ source, tokens: { prefix, base } });\n    }\n    if (prefix) tokeniser.error(\"Failed to parse float type\");\n  }\n\n  const { source } = tokeniser;\n  const num_type = integer_type(tokeniser) || decimal_type(tokeniser);\n  if (num_type) return num_type;\n  const base = tokeniser.consume(\"boolean\", \"byte\", \"octet\");\n  if (base) {\n    return new Type({ source, tokens: { base } });\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function identifiers(tokeniser) {\n  const ids = list(tokeniser, { parser: Token.parser(tokeniser, \"identifier\"), listName: \"identifier list\" });\n  if (!ids.length) {\n    tokeniser.error(\"Expected identifiers but none found\");\n  }\n  return ids;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function argument_list(tokeniser) {\n  return list(tokeniser, { parser: Argument.parse, listName: \"arguments list\" });\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nexport function type_with_extended_attributes(tokeniser, typeName) {\n  const extAttrs = ExtendedAttributes.parse(tokeniser);\n  const ret = Type.parse(tokeniser, typeName);\n  if (ret) ret.extAttrs = extAttrs;\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nexport function return_type(tokeniser, typeName) {\n  const typ = Type.parse(tokeniser, typeName || \"return-type\");\n  if (typ) {\n    return typ;\n  }\n  const voidToken = tokeniser.consume(\"void\");\n  if (voidToken) {\n    const ret = new Type({ source: tokeniser.source, tokens: { base: voidToken } });\n    ret.type = \"return-type\";\n    return ret;\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function stringifier(tokeniser) {\n  const special = tokeniser.consume(\"stringifier\");\n  if (!special) return;\n  const member = Attribute.parse(tokeniser, { special }) ||\n    Operation.parse(tokeniser, { special }) ||\n    tokeniser.error(\"Unterminated stringifier\");\n  return member;\n}\n\n/**\n * @param {string} str\n */\nexport function getLastIndentation(str) {\n  const lines = str.split(\"\\n\");\n  // the first line visually binds to the preceding token\n  if (lines.length) {\n    const match = lines[lines.length - 1].match(/^\\s+/);\n    if (match) {\n      return match[0];\n    }\n  }\n  return \"\";\n}\n\n/**\n * @param {string} parentTrivia\n */\nexport function getMemberIndentation(parentTrivia) {\n  const indentation = getLastIndentation(parentTrivia);\n  const indentCh = indentation.includes(\"\\t\") ? \"\\t\" : \"  \";\n  return indentation + indentCh;\n}\n\n/**\n * @param {object} def\n * @param {import(\"./extended-attributes.js\").ExtendedAttributes} def.extAttrs\n */\nexport function autofixAddExposedWindow(def) {\n  return () => {\n    if (def.extAttrs.length){\n      const tokeniser = new Tokeniser(\"Exposed=Window,\");\n      const exposed = SimpleExtendedAttribute.parse(tokeniser);\n      exposed.tokens.separator = tokeniser.consume(\",\");\n      const existing = def.extAttrs[0];\n      if (!/^\\s/.test(existing.tokens.name.trivia)) {\n        existing.tokens.name.trivia = ` ${existing.tokens.name.trivia}`;\n      }\n      def.extAttrs.unshift(exposed);\n    } else {\n      def.extAttrs = ExtendedAttributes.parse(new Tokeniser(\"[Exposed=Window]\"));\n      const trivia = def.tokens.base.trivia;\n      def.extAttrs.tokens.open.trivia = trivia;\n      def.tokens.base.trivia = `\\n${getLastIndentation(trivia)}`;\n    }\n  };\n}\n\n/**\n * Get the first syntax token for the given IDL object.\n * @param {*} data\n */\nexport function getFirstToken(data) {\n  if (data.extAttrs.length) {\n    return data.extAttrs.tokens.open;\n  }\n  if (data.type === \"operation\" && !data.special) {\n    return getFirstToken(data.idlType);\n  }\n  const tokens = Object.values(data.tokens).sort((x, y) => x.index - y.index);\n  return tokens[0];\n}\n\n/**\n * @template T\n * @param {T[]} array\n * @param {(item: T) => boolean} predicate\n */\nexport function findLastIndex(array, predicate) {\n  const index = array.slice().reverse().findIndex(predicate);\n  if (index === -1) {\n    return index;\n  }\n  return array.length - index - 1;\n}\n","import { Base } from \"./base.js\";\nimport { Default } from \"./default.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { unescape, type_with_extended_attributes } from \"./helpers.js\";\nimport { argumentNameKeywords, Tokeniser } from \"../tokeniser.js\";\nimport { validationError } from \"../error.js\";\nimport { idlTypeIncludesDictionary } from \"../validators/helpers.js\";\n\nexport class Argument extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const start_position = tokeniser.position;\n    const tokens = {};\n    const ret = new Argument({ source: tokeniser.source, tokens });\n    ret.extAttrs = ExtendedAttributes.parse(tokeniser);\n    tokens.optional = tokeniser.consume(\"optional\");\n    ret.idlType = type_with_extended_attributes(tokeniser, \"argument-type\");\n    if (!ret.idlType) {\n      return tokeniser.unconsume(start_position);\n    }\n    if (!tokens.optional) {\n      tokens.variadic = tokeniser.consume(\"...\");\n    }\n    tokens.name = tokeniser.consume(\"identifier\", ...argumentNameKeywords);\n    if (!tokens.name) {\n      return tokeniser.unconsume(start_position);\n    }\n    ret.default = tokens.optional ? Default.parse(tokeniser) : null;\n    return ret;\n  }\n\n  get type() {\n    return \"argument\";\n  }\n  get optional() {\n    return !!this.tokens.optional;\n  }\n  get variadic() {\n    return !!this.tokens.variadic;\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n    if (idlTypeIncludesDictionary(this.idlType, defs, { useNullableInner: true })) {\n      if (this.idlType.nullable) {\n        const message = `Dictionary arguments cannot be nullable.`;\n        yield validationError(this.tokens.name, this, \"no-nullable-dict-arg\", message);\n      } else if (this.optional && !this.default) {\n        const message = `Optional dictionary arguments must have a default value of \\`{}\\`.`;\n        yield validationError(this.tokens.name, this, \"dict-arg-default\", message, {\n          autofix: autofixOptionalDictionaryDefaultValue(this)\n        });\n      }\n    }\n  }\n}\n\n/**\n * @param {Argument} arg\n */\nfunction autofixOptionalDictionaryDefaultValue(arg) {\n  return () => {\n    arg.default = Default.parse(new Tokeniser(\" = {}\"));\n  };\n}\n","import { Base } from \"./base.js\";\n\nexport class Token extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {string} type\n   */\n  static parser(tokeniser, type) {\n    return () => {\n      const value = tokeniser.consume(type);\n      if (value) {\n        return new Token({ source: tokeniser.source, tokens: { value } });\n      }\n    };\n  }\n\n  get value() {\n    return this.tokens.value.value;\n  }\n}\n","import { Base } from \"./base.js\";\nimport { return_type, argument_list, unescape } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\n\nexport class Operation extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { special, regular } = {}) {\n    const tokens = { special };\n    const ret = new Operation({ source: tokeniser.source, tokens });\n    if (special && special.value === \"stringifier\") {\n      tokens.termination = tokeniser.consume(\";\");\n      if (tokens.termination) {\n        ret.arguments = [];\n        return ret;\n      }\n    }\n    if (!special && !regular) {\n      tokens.special = tokeniser.consume(\"getter\", \"setter\", \"deleter\");\n    }\n    ret.idlType = return_type(tokeniser) || tokeniser.error(\"Missing return type\");\n    tokens.name = tokeniser.consume(\"identifier\", \"includes\");\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"Invalid operation\");\n    ret.arguments = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated operation\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated operation, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"operation\";\n  }\n  get name() {\n    const { name } = this.tokens;\n    if (!name) {\n      return \"\";\n    }\n    return unescape(name.value);\n  }\n  get special() {\n    if (!this.tokens.special) {\n      return \"\";\n    }\n    return this.tokens.special.value;\n  }\n\n  *validate(defs) {\n    if (!this.name && [\"\", \"static\"].includes(this.special)) {\n      const message = `Regular or static operations must have both a return type and an identifier.`;\n      yield validationError(this.tokens.open, this, \"incomplete-op\", message);\n    }\n    if (this.idlType) {\n      yield* this.idlType.validate(defs);\n    }\n    for (const argument of this.arguments) {\n      yield* argument.validate(defs);\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, unescape } from \"./helpers.js\";\n\nexport class Attribute extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { special, noInherit = false, readonly = false } = {}) {\n    const start_position = tokeniser.position;\n    const tokens = { special };\n    const ret = new Attribute({ source: tokeniser.source, tokens });\n    if (!special && !noInherit) {\n      tokens.special = tokeniser.consume(\"inherit\");\n    }\n    if (ret.special === \"inherit\" && tokeniser.probe(\"readonly\")) {\n      tokeniser.error(\"Inherited attributes cannot be read-only\");\n    }\n    tokens.readonly = tokeniser.consume(\"readonly\");\n    if (readonly && !tokens.readonly && tokeniser.probe(\"attribute\")) {\n      tokeniser.error(\"Attributes must be readonly in this context\");\n    }\n    tokens.base = tokeniser.consume(\"attribute\");\n    if (!tokens.base) {\n      tokeniser.unconsume(start_position);\n      return;\n    }\n    ret.idlType = type_with_extended_attributes(tokeniser, \"attribute-type\") || tokeniser.error(\"Attribute lacks a type\");\n    switch (ret.idlType.generic) {\n      case \"sequence\":\n      case \"record\": tokeniser.error(`Attributes cannot accept ${ret.idlType.generic} types`);\n    }\n    tokens.name = tokeniser.consume(\"identifier\", \"async\", \"required\") || tokeniser.error(\"Attribute lacks a name\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated attribute, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"attribute\";\n  }\n  get special() {\n    if (!this.tokens.special) {\n      return \"\";\n    }\n    return this.tokens.special.value;\n  }\n  get readonly() {\n    return !!this.tokens.readonly;\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { syntaxError } from \"./error.js\";\nimport { unescape } from \"./productions/helpers.js\";\n\n// These regular expressions use the sticky flag so they will only match at\n// the current location (ie. the offset of lastIndex).\nconst tokenRe = {\n  // This expression uses a lookahead assertion to catch false matches\n  // against integers early.\n  \"decimal\": /-?(?=[0-9]*\\.|[0-9]+[eE])(([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([Ee][-+]?[0-9]+)?|[0-9]+[Ee][-+]?[0-9]+)/y,\n  \"integer\": /-?(0([Xx][0-9A-Fa-f]+|[0-7]*)|[1-9][0-9]*)/y,\n  \"identifier\": /[_-]?[A-Za-z][0-9A-Z_a-z-]*/y,\n  \"string\": /\"[^\"]*\"/y,\n  \"whitespace\": /[\\t\\n\\r ]+/y,\n  \"comment\": /((\\/(\\/.*|\\*([^*]|\\*[^/])*\\*\\/)[\\t\\n\\r ]*)+)/y,\n  \"other\": /[^\\t\\n\\r 0-9A-Za-z]/y\n};\n\nexport const typeNameKeywords = [\n  \"ArrayBuffer\",\n  \"DataView\",\n  \"Int8Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Uint8ClampedArray\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"any\",\n  \"object\",\n  \"symbol\"\n];\n\nexport const stringTypes = [\n  \"ByteString\",\n  \"DOMString\",\n  \"USVString\"\n];\n\nexport const argumentNameKeywords = [\n  \"async\",\n  \"attribute\",\n  \"callback\",\n  \"const\",\n  \"constructor\",\n  \"deleter\",\n  \"dictionary\",\n  \"enum\",\n  \"getter\",\n  \"includes\",\n  \"inherit\",\n  \"interface\",\n  \"iterable\",\n  \"maplike\",\n  \"namespace\",\n  \"partial\",\n  \"required\",\n  \"setlike\",\n  \"setter\",\n  \"static\",\n  \"stringifier\",\n  \"typedef\",\n  \"unrestricted\"\n];\n\nconst nonRegexTerminals = [\n  \"-Infinity\",\n  \"FrozenArray\",\n  \"Infinity\",\n  \"NaN\",\n  \"Promise\",\n  \"boolean\",\n  \"byte\",\n  \"double\",\n  \"false\",\n  \"float\",\n  \"long\",\n  \"mixin\",\n  \"null\",\n  \"octet\",\n  \"optional\",\n  \"or\",\n  \"readonly\",\n  \"record\",\n  \"sequence\",\n  \"short\",\n  \"true\",\n  \"unsigned\",\n  \"void\"\n].concat(argumentNameKeywords, stringTypes, typeNameKeywords);\n\nconst punctuations = [\n  \"(\",\n  \")\",\n  \",\",\n  \"...\",\n  \":\",\n  \";\",\n  \"<\",\n  \"=\",\n  \">\",\n  \"?\",\n  \"[\",\n  \"]\",\n  \"{\",\n  \"}\"\n];\n\nconst reserved = [\n  // \"constructor\" is now a keyword\n  \"_constructor\",\n  \"toString\",\n  \"_toString\",\n];\n\n/**\n * @param {string} str\n */\nfunction tokenise(str) {\n  const tokens = [];\n  let lastCharIndex = 0;\n  let trivia = \"\";\n  let line = 1;\n  let index = 0;\n  while (lastCharIndex < str.length) {\n    const nextChar = str.charAt(lastCharIndex);\n    let result = -1;\n\n    if (/[\\t\\n\\r ]/.test(nextChar)) {\n      result = attemptTokenMatch(\"whitespace\", { noFlushTrivia: true });\n    } else if (nextChar === '/') {\n      result = attemptTokenMatch(\"comment\", { noFlushTrivia: true });\n    }\n\n    if (result !== -1) {\n      const currentTrivia = tokens.pop().value;\n      line += (currentTrivia.match(/\\n/g) || []).length;\n      trivia += currentTrivia;\n      index -= 1;\n    } else if (/[-0-9.A-Z_a-z]/.test(nextChar)) {\n      result = attemptTokenMatch(\"decimal\");\n      if (result === -1) {\n        result = attemptTokenMatch(\"integer\");\n      }\n      if (result === -1) {\n        result = attemptTokenMatch(\"identifier\");\n        const lastIndex = tokens.length - 1;\n        const token = tokens[lastIndex];\n        if (result !== -1) {\n          if (reserved.includes(token.value)) {\n            const message = `${unescape(token.value)} is a reserved identifier and must not be used.`;\n            throw new WebIDLParseError(syntaxError(tokens, lastIndex, null, message));\n          } else if (nonRegexTerminals.includes(token.value)) {\n            token.type = token.value;\n          }\n        }\n      }\n    } else if (nextChar === '\"') {\n      result = attemptTokenMatch(\"string\");\n    }\n\n    for (const punctuation of punctuations) {\n      if (str.startsWith(punctuation, lastCharIndex)) {\n        tokens.push({ type: punctuation, value: punctuation, trivia, line, index });\n        trivia = \"\";\n        lastCharIndex += punctuation.length;\n        result = lastCharIndex;\n        break;\n      }\n    }\n\n    // other as the last try\n    if (result === -1) {\n      result = attemptTokenMatch(\"other\");\n    }\n    if (result === -1) {\n      throw new Error(\"Token stream not progressing\");\n    }\n    lastCharIndex = result;\n    index += 1;\n  }\n\n  // remaining trivia as eof\n  tokens.push({\n    type: \"eof\",\n    value: \"\",\n    trivia\n  });\n\n  return tokens;\n\n  /**\n   * @param {keyof tokenRe} type\n   * @param {object} [options]\n   * @param {boolean} [options.noFlushTrivia]\n   */\n  function attemptTokenMatch(type, { noFlushTrivia } = {}) {\n    const re = tokenRe[type];\n    re.lastIndex = lastCharIndex;\n    const result = re.exec(str);\n    if (result) {\n      tokens.push({ type, value: result[0], trivia, line, index });\n      if (!noFlushTrivia) {\n        trivia = \"\";\n      }\n      return re.lastIndex;\n    }\n    return -1;\n  }\n}\n\nexport class Tokeniser {\n  /**\n   * @param {string} idl\n   */\n  constructor(idl) {\n    this.source = tokenise(idl);\n    this.position = 0;\n  }\n\n  /**\n   * @param {string} message\n   */\n  error(message) {\n    throw new WebIDLParseError(syntaxError(this.source, this.position, this.current, message));\n  }\n\n  /**\n   * @param {string} type\n   */\n  probe(type) {\n    return this.source.length > this.position && this.source[this.position].type === type;\n  }\n\n  /**\n   * @param  {...string} candidates\n   */\n  consume(...candidates) {\n    for (const type of candidates) {\n      if (!this.probe(type)) continue;\n      const token = this.source[this.position];\n      this.position++;\n      return token;\n    }\n  }\n\n  /**\n   * @param {number} position\n   */\n  unconsume(position) {\n    this.position = position;\n  }\n}\n\nexport class WebIDLParseError extends Error {\n  constructor({ message, bareMessage, context, line, sourceName, input, tokens }) {\n    super(message);\n\n    this.name = \"WebIDLParseError\"; // not to be mangled\n    this.bareMessage = bareMessage;\n    this.context = context;\n    this.line = line;\n    this.sourceName = sourceName;\n    this.input = input;\n    this.tokens = tokens;\n  }\n}\n","import { list, unescape } from \"./helpers.js\";\nimport { Token } from \"./token.js\";\nimport { Base } from \"./base.js\";\n\nclass EnumValue extends Token {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const value = tokeniser.consume(\"string\");\n    if (value) {\n      return new EnumValue({ source: tokeniser.source, tokens: { value } });\n    }\n  }\n\n  get type() {\n    return \"enum-value\";\n  }\n  get value() {\n    return super.value.slice(1, -1);\n  }\n}\n\nexport class Enum extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.base = tokeniser.consume(\"enum\");\n    if (!tokens.base) {\n      return;\n    }\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"No name for enum\");\n    const ret = tokeniser.current = new Enum({ source: tokeniser.source, tokens });\n    tokens.open = tokeniser.consume(\"{\") || tokeniser.error(\"Bodyless enum\");\n    ret.values = list(tokeniser, {\n      parser: EnumValue.parse,\n      allowDangler: true,\n      listName: \"enumeration\"\n    });\n    if (tokeniser.probe(\"string\")) {\n      tokeniser.error(\"No comma between enum values\");\n    }\n    tokens.close = tokeniser.consume(\"}\") || tokeniser.error(\"Unexpected value in enum\");\n    if (!ret.values.length) {\n      tokeniser.error(\"No value in enum\");\n    }\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No semicolon after enum\");\n    return ret;\n  }\n\n  get type() {\n    return \"enum\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape } from \"./helpers.js\";\n\nexport class Includes extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const target = tokeniser.consume(\"identifier\");\n    if (!target) {\n      return;\n    }\n    const tokens = { target };\n    tokens.includes = tokeniser.consume(\"includes\");\n    if (!tokens.includes) {\n      tokeniser.unconsume(target.index);\n      return;\n    }\n    tokens.mixin = tokeniser.consume(\"identifier\") || tokeniser.error(\"Incomplete includes statement\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No terminating ; for includes statement\");\n    return new Includes({ source: tokeniser.source, tokens });\n  }\n\n  get type() {\n    return \"includes\";\n  }\n  get target() {\n    return unescape(this.tokens.target.value);\n  }\n  get includes() {\n    return unescape(this.tokens.mixin.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, unescape } from \"./helpers.js\";\n\nexport class Typedef extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    const ret = new Typedef({ source: tokeniser.source, tokens });\n    tokens.base = tokeniser.consume(\"typedef\");\n    if (!tokens.base) {\n      return;\n    }\n    ret.idlType = type_with_extended_attributes(tokeniser, \"typedef-type\") || tokeniser.error(\"Typedef lacks a type\");\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Typedef lacks a name\");\n    tokeniser.current = ret;\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated typedef, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"typedef\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { return_type, argument_list, unescape } from \"./helpers.js\";\n\nexport class CallbackFunction extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base) {\n    const tokens = { base };\n    const ret = new CallbackFunction({ source: tokeniser.source, tokens });\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Callback lacks a name\");\n    tokeniser.current = ret;\n    tokens.assign = tokeniser.consume(\"=\") || tokeniser.error(\"Callback lacks an assignment\");\n    ret.idlType = return_type(tokeniser) || tokeniser.error(\"Callback lacks a return type\");\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"Callback lacks parentheses for arguments\");\n    ret.arguments = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated callback\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated callback, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"callback\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { unescape } from \"./helpers.js\";\n\n/**\n * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n */\nfunction inheritance(tokeniser) {\n  const colon = tokeniser.consume(\":\");\n  if (!colon) {\n    return {};\n  }\n  const inheritance = tokeniser.consume(\"identifier\") || tokeniser.error(\"Inheritance lacks a type\");\n  return { colon, inheritance };\n}\n\nexport class Container extends Base {\n    /**\n     * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n     * @param {*} instance\n     * @param {*} args\n     */\n    static parse(tokeniser, instance, { type, inheritable, allowedMembers }) {\n      const { tokens } = instance;\n      tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(`Missing name in ${instance.type}`);\n      tokeniser.current = instance;\n      if (inheritable) {\n        Object.assign(tokens, inheritance(tokeniser));\n      }\n      tokens.open = tokeniser.consume(\"{\") || tokeniser.error(`Bodyless ${type}`);\n      instance.members = [];\n      while (true) {\n        tokens.close = tokeniser.consume(\"}\");\n        if (tokens.close) {\n          tokens.termination = tokeniser.consume(\";\") || tokeniser.error(`Missing semicolon after ${type}`);\n          return instance;\n        }\n        const ea = ExtendedAttributes.parse(tokeniser);\n        let mem;\n        for (const [parser, ...args] of allowedMembers) {\n          mem = parser(tokeniser, ...args);\n          if (mem) {\n            break;\n          }\n        }\n        if (!mem) {\n          tokeniser.error(\"Unknown member\");\n        }\n        mem.extAttrs = ea;\n        instance.members.push(mem);\n      }\n    }\n\n    get partial() {\n      return !!this.tokens.partial;\n    }\n    get name() {\n      return unescape(this.tokens.name.value);\n    }\n    get inheritance() {\n      if (!this.tokens.inheritance) {\n        return null;\n      }\n      return unescape(this.tokens.inheritance.value);\n    }\n\n    *validate(defs) {\n      for (const member of this.members) {\n        if (member.validate) {\n          yield* member.validate(defs);\n        }\n      }\n    }\n  }\n","import { Base } from \"./base.js\";\nimport { Type } from \"./type.js\";\nimport { const_data, const_value, primitive_type } from \"./helpers.js\";\n\nexport class Constant extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.base = tokeniser.consume(\"const\");\n    if (!tokens.base) {\n      return;\n    }\n    let idlType = primitive_type(tokeniser);\n    if (!idlType) {\n      const base = tokeniser.consume(\"identifier\") || tokeniser.error(\"Const lacks a type\");\n      idlType = new Type({ source: tokeniser.source, tokens: { base } });\n    }\n    if (tokeniser.probe(\"?\")) {\n      tokeniser.error(\"Unexpected nullable constant type\");\n    }\n    idlType.type = \"const-type\";\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Const lacks a name\");\n    tokens.assign = tokeniser.consume(\"=\") || tokeniser.error(\"Const lacks value assignment\");\n    tokens.value = const_value(tokeniser) || tokeniser.error(\"Const lacks a value\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated const, expected `;`\");\n    const ret = new Constant({ source: tokeniser.source, tokens });\n    ret.idlType = idlType;\n    return ret;\n  }\n\n  get type() {\n    return \"const\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n  get value() {\n    return const_data(this.tokens.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes } from \"./helpers.js\";\n\nexport class IterableLike extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const start_position = tokeniser.position;\n    const tokens = {};\n    const ret = new IterableLike({ source: tokeniser.source, tokens });\n    tokens.readonly = tokeniser.consume(\"readonly\");\n    if (!tokens.readonly) {\n      tokens.async = tokeniser.consume(\"async\");\n    }\n    tokens.base =\n      tokens.readonly ? tokeniser.consume(\"maplike\", \"setlike\") :\n      tokens.async ? tokeniser.consume(\"iterable\") :\n      tokeniser.consume(\"iterable\", \"maplike\", \"setlike\");\n    if (!tokens.base) {\n      tokeniser.unconsume(start_position);\n      return;\n    }\n\n    const { type } = ret;\n    const secondTypeRequired = type === \"maplike\" || ret.async;\n    const secondTypeAllowed = secondTypeRequired || type === \"iterable\";\n\n    tokens.open = tokeniser.consume(\"<\") || tokeniser.error(`Missing less-than sign \\`<\\` in ${type} declaration`);\n    const first = type_with_extended_attributes(tokeniser) || tokeniser.error(`Missing a type argument in ${type} declaration`);\n    ret.idlType = [first];\n    if (secondTypeAllowed) {\n      first.tokens.separator = tokeniser.consume(\",\");\n      if (first.tokens.separator) {\n        ret.idlType.push(type_with_extended_attributes(tokeniser));\n      }\n      else if (secondTypeRequired) {\n        tokeniser.error(`Missing second type argument in ${type} declaration`);\n      }\n    }\n    tokens.close = tokeniser.consume(\">\") || tokeniser.error(`Missing greater-than sign \\`>\\` in ${type} declaration`);\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(`Missing semicolon after ${type} declaration`);\n\n    return ret;\n  }\n\n  get type() {\n    return this.tokens.base.value;\n  }\n  get readonly() {\n    return !!this.tokens.readonly;\n  }\n  get async() {\n    return !!this.tokens.async;\n  }\n}\n","import { Base } from \"./base.js\";\nimport { argument_list } from \"./helpers.js\";\n\nexport class Constructor extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const base = tokeniser.consume(\"constructor\");\n    if (!base) {\n      return;\n    }\n    const tokens = { base };\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"No argument list in constructor\");\n    const args = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated constructor\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No semicolon after constructor\");\n    const ret = new Constructor({ tokens });\n    ret.arguments = args;\n    return ret;\n  }\n\n  get type() {\n    return \"constructor\";\n  }\n\n  *validate(defs) {\n    if (this.idlType) {\n      yield* this.idlType.validate(defs);\n    }\n    for (const argument of this.arguments) {\n      yield* argument.validate(defs);\n    }\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { Constant } from \"./constant.js\";\nimport { IterableLike } from \"./iterable.js\";\nimport { stringifier, autofixAddExposedWindow, getMemberIndentation, getLastIndentation, getFirstToken, findLastIndex } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\nimport { checkInterfaceMemberDuplication } from \"../validators/interface.js\";\nimport { Constructor } from \"./constructor.js\";\nimport { Tokeniser } from \"../tokeniser.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction static_member(tokeniser) {\n  const special = tokeniser.consume(\"static\");\n  if (!special) return;\n  const member = Attribute.parse(tokeniser, { special }) ||\n    Operation.parse(tokeniser, { special }) ||\n    tokeniser.error(\"No body in static member\");\n  return member;\n}\n\nexport class Interface extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base, { partial = null } = {}) {\n    const tokens = { partial, base };\n    return Container.parse(tokeniser, new Interface({ source: tokeniser.source, tokens }), {\n      type: \"interface\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Constant.parse],\n        [Constructor.parse],\n        [static_member],\n        [stringifier],\n        [IterableLike.parse],\n        [Attribute.parse],\n        [Operation.parse]\n      ]\n    });\n  }\n\n  get type() {\n    return \"interface\";\n  }\n\n  *validate(defs) {\n    yield* this.extAttrs.validate(defs);\n    if (\n      !this.partial &&\n      this.extAttrs.every(extAttr => extAttr.name !== \"Exposed\") &&\n      this.extAttrs.every(extAttr => extAttr.name !== \"NoInterfaceObject\")\n    ) {\n      const message = `Interfaces must have \\`[Exposed]\\` extended attribute. \\\nTo fix, add, for example, \\`[Exposed=Window]\\`. Please also consider carefully \\\nif your interface should also be exposed in a Worker scope. Refer to the \\\n[WebIDL spec section on Exposed](https://heycam.github.io/webidl/#Exposed) \\\nfor more information.`;\n      yield validationError(this.tokens.name, this, \"require-exposed\", message, {\n        autofix: autofixAddExposedWindow(this)\n      });\n    }\n    const constructors = this.extAttrs.filter(extAttr => extAttr.name === \"Constructor\");\n    for (const constructor of constructors) {\n      const message = `Constructors should now be represented as a \\`constructor()\\` operation on the interface \\\ninstead of \\`[Constructor]\\` extended attribute. Refer to the \\\n[WebIDL spec section on constructor operations](https://heycam.github.io/webidl/#idl-constructors) \\\nfor more information.`;\n      yield validationError(constructor.tokens.name, this, \"constructor-member\", message, {\n        autofix: autofixConstructor(this, constructor)\n      });\n    }\n\n    yield* super.validate(defs);\n    if (!this.partial) {\n      yield* checkInterfaceMemberDuplication(defs, this);\n    }\n  }\n}\n\nfunction autofixConstructor(interfaceDef, constructorExtAttr) {\n  return () => {\n    const indentation = getLastIndentation(interfaceDef.extAttrs.tokens.open.trivia);\n    const memberIndent = interfaceDef.members.length ?\n      getLastIndentation(getFirstToken(interfaceDef.members[0]).trivia) :\n      getMemberIndentation(indentation);\n    const constructorOp = Constructor.parse(new Tokeniser(`\\n${memberIndent}constructor();`));\n    constructorOp.extAttrs = [];\n    constructorOp.arguments = constructorExtAttr.arguments;\n\n    const existingIndex = findLastIndex(interfaceDef.members, m => m.type === \"constructor\");\n    interfaceDef.members.splice(existingIndex + 1, 0, constructorOp);\n\n    const { close }  = interfaceDef.tokens;\n    if (!close.trivia.includes(\"\\n\")) {\n      close.trivia += `\\n${indentation}`;\n    }\n\n    const { extAttrs } = interfaceDef;\n    const index = extAttrs.indexOf(constructorExtAttr);\n    const removed = extAttrs.splice(index, 1);\n    if (!extAttrs.length) {\n      extAttrs.tokens.open = extAttrs.tokens.close = undefined;\n    } else if (extAttrs.length === index) {\n      extAttrs[index - 1].tokens.separator = undefined;\n    } else if (!extAttrs[index].tokens.name.trivia.trim()) {\n      extAttrs[index].tokens.name.trivia = removed[0].tokens.name.trivia;\n    }\n  };\n}\n","import { validationError } from \"../error.js\";\n\nexport function* checkInterfaceMemberDuplication(defs, i) {\n  const opNames = new Set(getOperations(i).map(op => op.name));\n  const partials = defs.partials.get(i.name) || [];\n  const mixins = defs.mixinMap.get(i.name) || [];\n  for (const ext of [...partials, ...mixins]) {\n    const additions = getOperations(ext);\n    yield* forEachExtension(additions, opNames, ext, i);\n    for (const addition of additions) {\n      opNames.add(addition.name);\n    }\n  }\n\n  function* forEachExtension(additions, existings, ext, base) {\n    for (const addition of additions) {\n      const { name } = addition;\n      if (name && existings.has(name)) {\n        const message = `The operation \"${name}\" has already been defined for the base interface \"${base.name}\" either in itself or in a mixin`;\n        yield validationError(addition.tokens.name, ext, \"no-cross-overload\", message);\n      }\n    }\n  }\n\n  function getOperations(i) {\n    return i.members\n      .filter(({type}) => type === \"operation\");\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Constant } from \"./constant.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { stringifier } from \"./helpers.js\";\n\nexport class Mixin extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base, { partial } = {}) {\n    const tokens = { partial, base };\n    tokens.mixin = tokeniser.consume(\"mixin\");\n    if (!tokens.mixin) {\n      return;\n    }\n    return Container.parse(tokeniser, new Mixin({ source: tokeniser.source, tokens }), {\n      type: \"interface mixin\",\n      allowedMembers: [\n        [Constant.parse],\n        [stringifier],\n        [Attribute.parse, { noInherit: true }],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"interface mixin\";\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape, type_with_extended_attributes } from \"./helpers.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { Default } from \"./default.js\";\n\nexport class Field extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    const ret = new Field({ source: tokeniser.source, tokens });\n    ret.extAttrs = ExtendedAttributes.parse(tokeniser);\n    tokens.required = tokeniser.consume(\"required\");\n    ret.idlType = type_with_extended_attributes(tokeniser, \"dictionary-type\") || tokeniser.error(\"Dictionary member lacks a type\");\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Dictionary member lacks a name\");\n    ret.default = Default.parse(tokeniser);\n    if (tokens.required && ret.default) tokeniser.error(\"Required member must not have a default\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated dictionary member, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"field\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n  get required() {\n    return !!this.tokens.required;\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Field } from \"./field.js\";\n\nexport class Dictionary extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { partial } = {}) {\n    const tokens = { partial };\n    tokens.base = tokeniser.consume(\"dictionary\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new Dictionary({ source: tokeniser.source, tokens }), {\n      type: \"dictionary\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Field.parse],\n      ]\n    });\n  }\n\n  get type() {\n    return \"dictionary\";\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { validationError } from \"../error.js\";\nimport { autofixAddExposedWindow } from \"./helpers.js\";\n\nexport class Namespace extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { partial } = {}) {\n    const tokens = { partial };\n    tokens.base = tokeniser.consume(\"namespace\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new Namespace({ source: tokeniser.source, tokens }), {\n      type: \"namespace\",\n      allowedMembers: [\n        [Attribute.parse, { noInherit: true, readonly: true }],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"namespace\";\n  }\n\n  *validate(defs) {\n    if (!this.partial && this.extAttrs.every(extAttr => extAttr.name !== \"Exposed\")) {\n      const message = `Namespaces must have [Exposed] extended attribute. \\\nTo fix, add, for example, [Exposed=Window]. Please also consider carefully \\\nif your namespace should also be exposed in a Worker scope. Refer to the \\\n[WebIDL spec section on Exposed](https://heycam.github.io/webidl/#Exposed) \\\nfor more information.`;\n      yield validationError(this.tokens.name, this, \"require-exposed\", message, {\n        autofix: autofixAddExposedWindow(this)\n      });\n    }\n    yield* super.validate(defs);\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Operation } from \"./operation.js\";\nimport { Constant } from \"./constant.js\";\n\n\nexport class CallbackInterface extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, callback, { partial = null } = {}) {\n    const tokens = { callback };\n    tokens.base = tokeniser.consume(\"interface\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new CallbackInterface({ source: tokeniser.source, tokens }), {\n      type: \"callback interface\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Constant.parse],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"callback interface\";\n  }\n}\n","\"use strict\";\n\nimport { Tokeniser } from \"./tokeniser.js\";\nimport { Enum } from \"./productions/enum.js\";\nimport { Includes } from \"./productions/includes.js\";\nimport { ExtendedAttributes } from \"./productions/extended-attributes.js\";\nimport { Typedef } from \"./productions/typedef.js\";\nimport { CallbackFunction } from \"./productions/callback.js\";\nimport { Interface } from \"./productions/interface.js\";\nimport { Mixin } from \"./productions/mixin.js\";\nimport { Dictionary } from \"./productions/dictionary.js\";\nimport { Namespace } from \"./productions/namespace.js\";\nimport { CallbackInterface } from \"./productions/callback-interface.js\";\n\n/**\n * @param {Tokeniser} tokeniser\n * @param {object} options\n * @param {boolean} [options.concrete]\n */\nfunction parseByTokens(tokeniser, options) {\n  const source = tokeniser.source;\n\n  function error(str) {\n    tokeniser.error(str);\n  }\n\n  function consume(...candidates) {\n    return tokeniser.consume(...candidates);\n  }\n\n  function callback() {\n    const callback = consume(\"callback\");\n    if (!callback) return;\n    if (tokeniser.probe(\"interface\")) {\n      return CallbackInterface.parse(tokeniser, callback);\n    }\n    return CallbackFunction.parse(tokeniser, callback);\n  }\n\n  function interface_(opts) {\n    const base = consume(\"interface\");\n    if (!base) return;\n    const ret = Mixin.parse(tokeniser, base, opts) ||\n      Interface.parse(tokeniser, base, opts) ||\n      error(\"Interface has no proper body\");\n    return ret;\n  }\n\n  function partial() {\n    const partial = consume(\"partial\");\n    if (!partial) return;\n    return Dictionary.parse(tokeniser, { partial }) ||\n      interface_({ partial }) ||\n      Namespace.parse(tokeniser, { partial }) ||\n      error(\"Partial doesn't apply to anything\");\n  }\n\n  function definition() {\n    return callback() ||\n      interface_() ||\n      partial() ||\n      Dictionary.parse(tokeniser) ||\n      Enum.parse(tokeniser) ||\n      Typedef.parse(tokeniser) ||\n      Includes.parse(tokeniser) ||\n      Namespace.parse(tokeniser);\n  }\n\n  function definitions() {\n    if (!source.length) return [];\n    const defs = [];\n    while (true) {\n      const ea = ExtendedAttributes.parse(tokeniser);\n      const def = definition();\n      if (!def) {\n        if (ea.length) error(\"Stray extended attributes\");\n        break;\n      }\n      def.extAttrs = ea;\n      defs.push(def);\n    }\n    const eof = consume(\"eof\");\n    if (options.concrete) {\n      defs.push(eof);\n    }\n    return defs;\n  }\n  const res = definitions();\n  if (tokeniser.position < source.length) error(\"Unrecognised tokens\");\n  return res;\n}\n\nexport function parse(str, options = {}) {\n  const tokeniser = new Tokeniser(str);\n  if (typeof options.sourceName !== \"undefined\") {\n    tokeniser.source.name = options.sourceName;\n  }\n  return parseByTokens(tokeniser, options);\n}\n","\"use strict\";\n\nfunction noop(arg) {\n  return arg;\n}\n\nconst templates = {\n  wrap: items => items.join(\"\"),\n  trivia: noop,\n  name: noop,\n  reference: noop,\n  type: noop,\n  generic: noop,\n  nameless: noop,\n  inheritance: noop,\n  definition: noop,\n  extendedAttribute: noop,\n  extendedAttributeReference: noop\n};\n\nexport function write(ast, { templates: ts = templates } = {}) {\n  ts = Object.assign({}, templates, ts);\n\n  function reference(raw, { unescaped, context }) {\n    if (!unescaped) {\n      unescaped = raw.startsWith(\"_\") ? raw.slice(1) : raw;\n    }\n    return ts.reference(raw, unescaped, context);\n  }\n\n  function token(t, wrapper = noop, ...args) {\n    if (!t) {\n      return \"\";\n    }\n    const value = wrapper(t.value, ...args);\n    return ts.wrap([ts.trivia(t.trivia), value]);\n  }\n\n  function reference_token(t, context) {\n    return token(t, reference, { context });\n  }\n\n  function name_token(t, arg) {\n    return token(t, ts.name, arg);\n  }\n\n  function type_body(it) {\n    if (it.union || it.generic) {\n      return ts.wrap([\n        token(it.tokens.base, ts.generic),\n        token(it.tokens.open),\n        ...it.subtype.map(type),\n        token(it.tokens.close)\n      ]);\n    }\n    const firstToken = it.tokens.prefix || it.tokens.base;\n    const prefix = it.tokens.prefix ? [\n      it.tokens.prefix.value,\n      ts.trivia(it.tokens.base.trivia)\n    ] : [];\n    const ref = reference(ts.wrap([\n      ...prefix,\n      it.tokens.base.value,\n      token(it.tokens.postfix)\n    ]), { unescaped: it.idlType, context: it });\n    return ts.wrap([ts.trivia(firstToken.trivia), ref]);\n  }\n  function type(it) {\n    return ts.wrap([\n      extended_attributes(it.extAttrs),\n      type_body(it),\n      token(it.tokens.nullable),\n      token(it.tokens.separator)\n    ]);\n  }\n  function default_(def) {\n    if (!def) {\n      return \"\";\n    }\n    return ts.wrap([\n      token(def.tokens.assign),\n      ...def.expression.map(t => token(t))\n    ]);\n  }\n  function argument(arg) {\n    return ts.wrap([\n      extended_attributes(arg.extAttrs),\n      token(arg.tokens.optional),\n      ts.type(type(arg.idlType)),\n      token(arg.tokens.variadic),\n      name_token(arg.tokens.name, { data: arg }),\n      default_(arg.default),\n      token(arg.tokens.separator)\n    ]);\n  }\n  function identifier(id, context) {\n    return ts.wrap([\n      reference_token(id.tokens.value, context),\n      token(id.tokens.separator)\n    ]);\n  }\n  function make_ext_at(it) {\n    const { rhsType } = it.params;\n    return ts.wrap([\n      ts.trivia(it.tokens.name.trivia),\n      ts.extendedAttribute(ts.wrap([\n        ts.extendedAttributeReference(it.name),\n        token(it.params.tokens.assign),\n        reference_token(it.params.tokens.secondaryName, it),\n        token(it.params.tokens.open),\n        ...!it.params.list ? [] :\n          it.params.list.map(\n            rhsType === \"identifier-list\" ? id => identifier(id, it) : argument\n          ),\n        token(it.params.tokens.close)\n      ])),\n      token(it.tokens.separator)\n    ]);\n  }\n  function extended_attributes(eats) {\n    if (!eats.length) return \"\";\n    return ts.wrap([\n      token(eats.tokens.open),\n      ...eats.map(make_ext_at),\n      token(eats.tokens.close)\n    ]);\n  }\n\n  function operation(it, parent) {\n    const body = it.idlType ? [\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.open),\n      ts.wrap(it.arguments.map(argument)),\n      token(it.tokens.close),\n    ] : [];\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      it.tokens.name ? token(it.tokens.special) : token(it.tokens.special, ts.nameless, { data: it, parent }),\n      ...body,\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function attribute(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.special),\n      token(it.tokens.readonly),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function constructor(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base, ts.nameless, { data: it, parent }),\n      token(it.tokens.open),\n      ts.wrap(it.arguments.map(argument)),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function inheritance(inh) {\n    if (!inh.tokens.inheritance) {\n      return \"\";\n    }\n    return ts.wrap([\n      token(inh.tokens.colon),\n      ts.trivia(inh.tokens.inheritance.trivia),\n      ts.inheritance(reference(inh.tokens.inheritance.value, { context: inh }))\n    ]);\n  }\n\n  function container(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.callback),\n      token(it.tokens.partial),\n      token(it.tokens.base),\n      token(it.tokens.mixin),\n      name_token(it.tokens.name, { data: it }),\n      inheritance(it),\n      token(it.tokens.open),\n      iterate(it.members, it),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n\n  function field(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.required),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      default_(it.default),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function const_(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.assign),\n      token(it.tokens.value),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function typedef(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function includes(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      reference_token(it.tokens.target, it),\n      token(it.tokens.includes),\n      reference_token(it.tokens.mixin, it),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function callback(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.assign),\n      ts.type(type(it.idlType)),\n      token(it.tokens.open),\n      ...it.arguments.map(argument),\n      token(it.tokens.close),\n      token(it.tokens.termination),\n    ]), { data: it });\n  }\n  function enum_(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.open),\n      iterate(it.values, it),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function enum_value(v, parent) {\n    return ts.wrap([\n      ts.trivia(v.tokens.value.trivia),\n      ts.definition(\n        ts.wrap(['\"', ts.name(v.value, { data: v, parent }), '\"']),\n        { data: v, parent }\n      ),\n      token(v.tokens.separator)\n    ]);\n  }\n  function iterable_like(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.readonly),\n      token(it.tokens.async),\n      token(it.tokens.base, ts.generic),\n      token(it.tokens.open),\n      ts.wrap(it.idlType.map(type)),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function eof(it) {\n    return ts.trivia(it.trivia);\n  }\n\n  const table = {\n    interface: container,\n    \"interface mixin\": container,\n    namespace: container,\n    operation,\n    attribute,\n    constructor,\n    dictionary: container,\n    field,\n    const: const_,\n    typedef,\n    includes,\n    callback,\n    enum: enum_,\n    \"enum-value\": enum_value,\n    iterable: iterable_like,\n    maplike: iterable_like,\n    setlike: iterable_like,\n    \"callback interface\": container,\n    eof\n  };\n  function dispatch(it, parent) {\n    const dispatcher = table[it.type];\n    if (!dispatcher) {\n      throw new Error(`Type \"${it.type}\" is unsupported`);\n    }\n    return table[it.type](it, parent);\n  }\n  function iterate(things, parent) {\n    if (!things) return;\n    const results = things.map(thing => dispatch(thing, parent));\n    return ts.wrap(results);\n  }\n  return iterate(ast);\n}\n","\"use strict\";\n\nimport { validationError as error } from \"./error.js\";\n\nfunction getMixinMap(all, unique) {\n  const map = new Map();\n  const includes = all.filter(def => def.type === \"includes\");\n  for (const include of includes) {\n    const mixin = unique.get(include.includes);\n    if (!mixin) {\n      continue;\n    }\n    const array = map.get(include.target);\n    if (array) {\n      array.push(mixin);\n    } else {\n      map.set(include.target, [mixin]);\n    }\n  }\n  return map;\n}\n\nfunction groupDefinitions(all) {\n  const unique = new Map();\n  const duplicates = new Set();\n  const partials = new Map();\n  for (const def of all) {\n    if (def.partial) {\n      const array = partials.get(def.name);\n      if (array) {\n        array.push(def);\n      } else {\n        partials.set(def.name, [def]);\n      }\n      continue;\n    }\n    if (!def.name) {\n      continue;\n    }\n    if (!unique.has(def.name)) {\n      unique.set(def.name, def);\n    } else {\n      duplicates.add(def);\n    }\n  }\n  return {\n    all,\n    unique,\n    partials,\n    duplicates,\n    mixinMap: getMixinMap(all, unique),\n    cache: {\n      typedefIncludesDictionary: new WeakMap()\n    },\n  };\n}\n\nfunction* checkDuplicatedNames({ unique, duplicates }) {\n  for (const dup of duplicates) {\n    const { name } = dup;\n    const message = `The name \"${name}\" of type \"${unique.get(name).type}\" was already seen`;\n    yield error(dup.tokens.name, dup, \"no-duplicate\", message);\n  }\n}\n\nfunction* validateIterable(ast) {\n  const defs = groupDefinitions(ast);\n  for (const def of defs.all) {\n    if (def.validate) {\n      yield* def.validate(defs);\n    }\n  }\n  yield* checkDuplicatedNames(defs);\n}\n\n// Remove this once all of our support targets expose `.flat()` by default\nfunction flatten(array) {\n  if (array.flat) {\n    return array.flat();\n  }\n  return [].concat(...array);\n}\n\n/**\n * @param {*} ast AST or array of ASTs\n */\nexport function validate(ast) {\n  return [...validateIterable(flatten(ast))];\n}\n","export { parse } from \"./lib/webidl2.js\";\nexport { write } from \"./lib/writer.js\";\nexport { validate } from \"./lib/validator.js\";\nexport { WebIDLParseError } from \"./lib/tokeniser.js\";\n"],"sourceRoot":""}